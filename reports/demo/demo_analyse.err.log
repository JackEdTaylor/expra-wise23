Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Fit traditional model
m_lm <- lm(resp ~ 0 + word, data = data_clean_c)

# extract estimates (coefficients)
est_lm <- coef(m_lm) |>
  # put into a tidy dataframe
  as_tibble(rownames = "word") |>
  # M, standing for mean
  rename(M = value) |>
  # store the model type as a variable (we'll use this later)
  mutate(model = "LM")
------------------


Error in eval(mf, parent.frame()): object 'data_clean_c' not found
Traceback:

1. lm(resp ~ 0 + word, data = data_clean_c)
2. eval(mf, parent.frame())
3. eval(mf, parent.frame())
4. stats::model.frame(formula = resp ~ 0 + word, data = data_clean_c, 
 .     drop.unused.levels = TRUE)
5. model.frame.default(formula = resp ~ 0 + word, data = data_clean_c, 
 .     drop.unused.levels = TRUE)
6. is.data.frame(data)

